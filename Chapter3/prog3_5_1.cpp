// prog3_5_1.cpp : 数组
//

#include <iostream>
#include <string>

int main()
{
    // 数组的初始化
    const unsigned sz = 3;
    int ial[sz] = { 0,1,2 };          // 编译时维度必须已知，且必须是一个常量表达式
    int a1[] = { 0,1,2 };            // 声明时如果没有指明维度，编译器会根据初始值的数量计算出来
    int a2[5] = { 0,1,2 };           // 前3个元素初始化为0,1,2，后面两个元素默认初始化，等价于a3[] = { 0, 1, 2, 0, 0 };
    std::string a4[3] = { "hi","bye" };       // 等价于 a4[] = { "hi", "bye", "" };
    //int a5[2] = { 0,1,2 };           // 错误：元素数量不能大于已经指明的维度

    // 用 字符串字面值 初始化 字符数组，但是字符串结尾处的空字符也会被拷贝进去
    char a3[] = { 'C','+','+' };                  // 列表初始化，维度为3，没有空字符
    char a4[] = { 'C','+','+','\0' };             // 列表初始化，维度为4，含有显示的空字符
    char a5[] = "C++";                            // 自动添加表示字符串结束的空字符，维度为4
    //char a4[6] = "Deniel";                      // 错误：没有空间存放空字符

    // 不允许拷贝和赋值
    int a[] = { 0,1,2 };
    //int a6[] = a;             // 错误：不允许使用一个数组初始化另一个数组
    int a3[3];
    //a3 = a;                   // 错误：不能把一个数组直接赋值给另一个数组

    // 指针和引用
    int arr[10];
    int *ptrs[10];                       // ptrs 是含有 10个 整型指针 的数组
    //int& refs[10] = arr;               // 错误：不存在含有 n个 引用 的数组
    int (*Parray)[10] = &arr;            // Parray 是 指向一个 含有10个整数的数组 的指针；即数组的指针
    int (&arrRef)[10] = arr;             // arrRef 是 一个 含有10个整数的数组的 引用；即数组的引用
    int *(&arry)[10] = ptrs;             // arry 是 数组的引用，该数组含有 10 个指针

}

// 